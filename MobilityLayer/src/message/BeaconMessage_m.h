//
// Generated file, do not edit! Created by nedtool 5.3 from src/message/BeaconMessage.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __VEINS_MYPROJECT_BEACONMESSAGE_M_H
#define __VEINS_MYPROJECT_BEACONMESSAGE_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace veins_myproject {

/**
 * Class generated from <tt>src/message/BeaconMessage.msg:21</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet BeaconMessage
 * {
 *     string idSender;
 *     string roadSender;
 *     string TypeDevice;
 *     double posicaoX;
 *     double posicaoY;
 *     double posRoad;
 *     double speed;
 * }
 * </pre>
 */
class BeaconMessage : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string idSender;
    ::omnetpp::opp_string roadSender;
    ::omnetpp::opp_string TypeDevice;
    double posicaoX;
    double posicaoY;
    double posRoad;
    double lenRoad;
    double speed;

  private:
    void copy(const BeaconMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BeaconMessage&);

  public:
    BeaconMessage(const char *name=nullptr, short kind=0);
    BeaconMessage(const BeaconMessage& other);
    virtual ~BeaconMessage();
    BeaconMessage& operator=(const BeaconMessage& other);
    virtual BeaconMessage *dup() const override {return new BeaconMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getIdSender() const;
    virtual void setIdSender(const char * idSender);
    virtual const char * getRoadSender() const;
    virtual void setRoadSender(const char * roadSender);
    virtual const char * getTypeDevice() const;
    virtual void setTypeDevice(const char * TypeDevice);
    virtual double getPosicaoX() const;
    virtual void setPosicaoX(double posicaoX);
    virtual double getPosicaoY() const;
    virtual void setPosicaoY(double posicaoY);
    virtual double getPosRoad() const;
    virtual void setPosRoad(double lenRoad);
    virtual double getLenRoad() const;
    virtual void setLenRoad(double lenRoad);
    virtual double getSpeed() const;
    virtual void setSpeed(double speed);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BeaconMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BeaconMessage& obj) {obj.parsimUnpack(b);}

} // namespace veins_myproject

#endif // ifndef __VEINS_MYPROJECT_BEACONMESSAGE_M_H

